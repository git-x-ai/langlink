// CCC Suite's Enhanced CursorRules Collection
// A comprehensive collection of enhanced .cursorrules files for maximizing Cursor AI potential

// General guidelines
Always use Markdown for documentation and README files
Maintain the existing structure of the README.md file
Focus on advanced patterns, enterprise practices, and production-ready strategies

// README.md structure
Maintain the following structure in the README.md file:
  1. Title and Awesome badge
  2. Logo
  3. Short description
  4. "Why Enhanced .cursorrules?" section
  5. Table of Contents
  6. Enhanced Rules section
     - Frontend Frameworks and Libraries
     - Backend and Full-Stack
     - Mobile Development
     - CSS and Styling
     - State Management
     - Database and API
     - Testing
     - Build Tools and Development
     - Language-Specific
     - Other
  7. How to Use section
  8. Contributing section
  9. License section

// Organization of enhanced rules
Organize .cursorrules files into the following main categories within the 'rules' directory:
  - Frontend Frameworks and Libraries
  - Backend and Full-Stack
  - Mobile Development
  - CSS and Styling
  - State Management
  - Database and API
  - Testing
  - Build Tools and Development
  - Language-Specific
  - Other
Place each .cursorrules file directly in the 'rules' folder
The folder name for each .cursorrules file should describe the category and content of the file
Refer to the README in each folder for guidance on naming conventions and descriptions

// Enhanced naming and formatting
Use descriptive names for .cursorrules files and their folders, following the pattern: 'technology-focus-cursorrules-prompt-file'
Maintain alphabetical order within each category in the README.md file
Use consistent formatting for list items in the README.md file
Include "Enhanced" or "Advanced" in descriptions to reflect the advanced nature

// Enhanced content guidelines
When creating or editing .cursorrules files, focus on:
- Advanced project-specific instructions and best practices
- Enterprise-grade patterns and architectural decisions
- Performance optimization and Core Web Vitals
- Security considerations and vulnerability prevention
- Comprehensive testing strategies and quality assurance
- Modern development workflows and DevOps practices
- Accessibility and inclusive design principles
- Production-ready strategies and scalability patterns
Include comments in .cursorrules files to explain complex rules or provide context
Use clear and concise language in all documentation and .cursorrules files
Provide deep context on frameworks, patterns, and commonly-used methods
Include advanced architectural patterns and modern development practices

// Optional README for credit and description
Each .cursorrules file may have an accompanying README.md file in its folder
Use this README to provide credit to the original author and a detailed description of the .cursorrules file's purpose
Include examples and use cases for better understanding

// Maintenance and updates
Update the README.md file when adding new .cursorrules files, placing them in the correct category
Ensure all links in the README.md file are relative and correct
When updating the README.md, ensure the table of contents remains accurate
When adding new categories, update both the 'Contents' and 'Enhanced Rules' sections of the README.md
Regularly review and update categorization as the repository grows

// Enhanced best practices
Maintain consistency in capitalization and punctuation throughout the repository
When referencing Cursor AI, always use the correct capitalization and spacing
When adding examples or explanations, focus on practical use cases for Cursor AI users with advanced patterns
If a .cursorrules file fits multiple categories, place it in the most relevant one and cross-reference in others if necessary
Keep the 'Other' category for .cursorrules files that don't fit neatly into the main categories
Focus on enterprise-grade practices and production-ready strategies

// Additional enhanced insights
.cursorrules files are repo-specific "Rules for AI" with advanced knowledge
.cursorrules files should be placed in the root of the repository
The content of .cursorrules files will be appended to the global "Rules for AI" settings in Cursor
Focus on providing repo-level context and guidelines with advanced patterns
.cursorrules can include information about project structure, architectural decisions, and commonly used libraries or methods
Consider including rules for handling specific file types or coding patterns unique to your project
Rules can cover both code generation and code understanding aspects for Cursor AI
Include advanced patterns, performance optimization, security considerations, and modern development practices
Focus on transforming Cursor AI into an expert development partner