---
description: Tailwind CSS and UI component best practices for modern web applications - Enhanced with advanced patterns, enterprise practices, and production-ready strategies
globs: **/*.css, **/*.tsx, **/*.jsx, tailwind.config.js, tailwind.config.ts, **/*.scss, **/*.sass
---

# Tailwind CSS Advanced Best Practices

## Advanced Project Setup & Configuration
- Use proper Tailwind configuration with comprehensive customization
- Configure theme extension properly with comprehensive design tokens
- Set up proper purge configuration with comprehensive optimization
- Use proper plugin integration with comprehensive functionality
- Configure custom spacing and breakpoints with comprehensive responsive design
- Set up proper color palette with comprehensive semantic naming
- Implement proper design system with comprehensive consistency
- Use proper environment configuration with comprehensive management
- Implement proper build optimization with comprehensive performance
- Use proper monitoring and analytics with comprehensive metrics

## Advanced Component Styling & Architecture
- Use utility classes over custom CSS with comprehensive optimization
- Group related utilities with @apply when needed with proper organization
- Use proper responsive design utilities with comprehensive breakpoints
- Implement dark mode properly with comprehensive theming
- Use proper state variants with comprehensive interaction states
- Keep component styles consistent with comprehensive design system
- Implement proper component composition with comprehensive patterns
- Use proper component inheritance with comprehensive abstraction
- Implement proper component testing with comprehensive coverage
- Use proper component documentation with comprehensive examples

## Advanced Layout & Grid Systems
- Use Flexbox and Grid utilities effectively with comprehensive layouts
- Implement proper spacing system with comprehensive consistency
- Use container queries when needed with comprehensive responsive design
- Implement proper responsive breakpoints with comprehensive optimization
- Use proper padding and margin utilities with comprehensive spacing
- Implement proper alignment utilities with comprehensive positioning
- Use proper layout patterns with comprehensive optimization
- Implement proper grid systems with comprehensive flexibility
- Use proper flexbox patterns with comprehensive alignment
- Implement proper CSS Grid patterns with comprehensive layouts

## Advanced Typography & Text Styling
- Use proper font size utilities with comprehensive hierarchy
- Implement proper line height with comprehensive readability
- Use proper font weight utilities with comprehensive emphasis
- Configure custom fonts properly with comprehensive loading
- Use proper text alignment with comprehensive layout
- Implement proper text decoration with comprehensive styling
- Use proper typography scale with comprehensive consistency
- Implement proper responsive typography with comprehensive scaling
- Use proper font optimization with comprehensive performance
- Implement proper accessibility with comprehensive compliance

## Advanced Colors & Theming
- Use semantic color naming with comprehensive consistency
- Implement proper color contrast with comprehensive accessibility
- Use opacity utilities effectively with comprehensive transparency
- Configure custom colors properly with comprehensive theming
- Use proper gradient utilities with comprehensive visual effects
- Implement proper hover states with comprehensive interactions
- Use proper color system with comprehensive organization
- Implement proper theming with comprehensive customization
- Use proper color accessibility with comprehensive compliance
- Implement proper color monitoring with comprehensive analytics

## Advanced Components & UI Libraries
- Use shadcn/ui components when available with comprehensive integration
- Extend components properly with comprehensive customization
- Keep component variants consistent with comprehensive design system
- Implement proper animations with comprehensive performance
- Use proper transition utilities with comprehensive smoothness
- Keep accessibility in mind with comprehensive compliance
- Use proper component composition with comprehensive patterns
- Implement proper component testing with comprehensive coverage
- Use proper component documentation with comprehensive examples
- Implement proper component versioning with comprehensive management

## Advanced Responsive Design & Mobile-First
- Use mobile-first approach with comprehensive responsive design
- Implement proper breakpoints with comprehensive device support
- Use container queries effectively with comprehensive layout control
- Handle different screen sizes properly with comprehensive optimization
- Implement proper responsive typography with comprehensive scaling
- Use proper responsive spacing with comprehensive consistency
- Implement proper responsive images with comprehensive optimization
- Use proper responsive navigation with comprehensive UX
- Implement proper responsive forms with comprehensive usability
- Use proper responsive testing with comprehensive coverage

## Advanced Performance & Optimization
- Use proper purge configuration with comprehensive optimization
- Minimize custom CSS with comprehensive utility usage
- Use proper caching strategies with comprehensive invalidation
- Implement proper code splitting with comprehensive optimization
- Optimize for production with comprehensive performance
- Monitor bundle size with comprehensive analysis
- Use proper lazy loading with comprehensive optimization
- Implement proper critical CSS with comprehensive above-the-fold optimization
- Use proper CDN integration with comprehensive asset optimization
- Implement proper performance monitoring with comprehensive alerting

## Advanced Best Practices & Standards
- Follow naming conventions with comprehensive consistency
- Keep styles organized with proper structure
- Use proper documentation with comprehensive examples
- Implement proper testing with comprehensive coverage
- Follow accessibility guidelines with comprehensive compliance
- Use proper version control with comprehensive change management
- Implement proper code review with comprehensive quality gates
- Use proper team collaboration with comprehensive communication
- Implement proper project management with comprehensive tracking
- Use proper monitoring and alerting with comprehensive metrics

## Advanced Integration & Ecosystem
- Use proper framework integration with comprehensive features
- Implement proper build tool integration with comprehensive optimization
- Use proper deployment integration with comprehensive automation
- Implement proper monitoring integration with comprehensive analytics
- Use proper testing integration with comprehensive coverage
- Implement proper accessibility integration with comprehensive compliance
- Use proper performance integration with comprehensive optimization
- Implement proper security integration with comprehensive protection
- Use proper compliance integration with comprehensive requirements
- Use proper analytics integration with comprehensive tracking 